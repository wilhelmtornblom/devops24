---
# tasks file for node_exporter
- name: Create node_exporter group
  ansible.builtin.group:
    name: "{{ node_exporter_group }}"
    state: present

- name: Create node_exporter user
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    shell: /sbin/nologin
    create_home: false
    state: present

- name: Download Node Exporter
  ansible.builtin.get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.tar.gz"
    mode: 0644

- name: Extract Node Exporter
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.tar.gz"
    dest: "/tmp"
    remote_src: true
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/note_exporter"

- name: Copy Node Exporter to dest
  ansible.builtin.copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_bin_path }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755
    remote_src: true

- name: Create systemd service file
  ansible.builtin.template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    mode: 0644
  notify: Restart node_exporter

- name: Enable and start node_exporter
  ansible.builtin.systemd:
    name: node_exporter
    enabled: true
    state: started
    daemon_reload: true

- name: Allow Node Exporter firewall
  ansible.posix.firewalld:
    port: 9100/tcp
    permanent: true
    state: enabled
    immediate: true



